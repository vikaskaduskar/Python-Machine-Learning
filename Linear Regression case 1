Machine Learning With Python: Linear Regression With One Variable
In []:  import pandas as pd
        import numpy as np
        from sklearn import linear_model
        import matplotlib.pyplot as plt
In[2] : df=pd.read_csv('C:/Users/Electronics Dept/Desktop/homeprices.csv')
        df
Out[2] :        area	price
              0	2600	550000
              1	3000	565000
              2	3200	610000
              3	3600	680000
              4	4000	725000
In[3] :   %matplotlib inline
          plt.xlabel('area')
          plt.ylabel('price')
          plt.scatter(df.area,df.price,color='red',marker='+')
Out[3] : <matplotlib.collections.PathCollection at 0x1d4beee6d30>
In[4] :   new_df = df.drop('price',axis='columns')
          new_df
In[5] :   price = df.price
          price
In[6] :   reg = linear_model.LinearRegression()
          reg.fit(df[['area']],df.price)
In[7] :   reg.predict(3300)
Out[3] :  array([ 628715.75342466])
In[8] :   reg.coef_
Out[4] :  array([ 135.78767123])
In[9] :   reg.intercept_
Out[5] :  180616.43835616432
In[10] :  d=pd.read_csv('C:/Users/Electronics Dept/Desktop/homeprices.csv')
          d.head(3)
In[11] :  p=reg.predict(d)
In[12] :  d['prices']=p
In[13] :  d
In[14] :  d.to_csv("prediction.csv")

